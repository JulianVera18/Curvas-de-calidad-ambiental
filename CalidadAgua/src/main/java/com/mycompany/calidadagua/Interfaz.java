/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.mycompany.calidadagua;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author Julian//Braxkucp
 */
public class Interfaz extends javax.swing.JFrame {
    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelFondo = new javax.swing.JPanel();
        Titulo = new javax.swing.JLabel();
        Numerolbl = new javax.swing.JLabel();
        ParametrosLbl = new javax.swing.JLabel();
        DatosESLbl = new javax.swing.JLabel();
        EntradaLbl = new javax.swing.JLabel();
        SalidaLbl = new javax.swing.JLabel();
        TMlbl = new javax.swing.JLabel();
        FormulaLbl = new javax.swing.JLabel();
        CriterioLbl = new javax.swing.JLabel();
        ResultadoLbl = new javax.swing.JLabel();
        CumplimientoLbl = new javax.swing.JLabel();
        EvaluacionLbl = new javax.swing.JLabel();
        UnoLbl = new javax.swing.JLabel();
        DosLbl = new javax.swing.JLabel();
        TresLbl = new javax.swing.JLabel();
        CuatroLbl = new javax.swing.JLabel();
        CincoLbl = new javax.swing.JLabel();
        SeisLbl = new javax.swing.JLabel();
        SieteLbl = new javax.swing.JLabel();
        ColiformesLbl = new javax.swing.JLabel();
        DBOsLbl = new javax.swing.JLabel();
        GrasasLbl = new javax.swing.JLabel();
        MaterialLbl = new javax.swing.JLabel();
        SolidosLbl = new javax.swing.JLabel();
        PHlbl = new javax.swing.JLabel();
        TemperaturaLbl = new javax.swing.JLabel();
        Coliformes1Txt = new javax.swing.JTextField();
        Coliformes2Txt = new javax.swing.JTextField();
        DBOs1Txt = new javax.swing.JTextField();
        DBOs2Txt = new javax.swing.JTextField();
        Grasas1Txt = new javax.swing.JTextField();
        Grasas2Txt = new javax.swing.JTextField();
        MaterialTxt = new javax.swing.JTextField();
        Solidos1Txt = new javax.swing.JTextField();
        Solidos2Txt = new javax.swing.JTextField();
        PHTxt = new javax.swing.JTextField();
        TemperaturaTxt = new javax.swing.JTextField();
        TMlbl2 = new javax.swing.JLabel();
        TMlbl3 = new javax.swing.JLabel();
        TMlbl4 = new javax.swing.JLabel();
        TMlbl5 = new javax.swing.JLabel();
        TMlbl6 = new javax.swing.JLabel();
        TMlbl7 = new javax.swing.JLabel();
        TMlbl8 = new javax.swing.JLabel();
        FormulaLbl2 = new javax.swing.JLabel();
        FormulaLbl3 = new javax.swing.JLabel();
        FormulaLbl4 = new javax.swing.JLabel();
        FormulaLbl5 = new javax.swing.JLabel();
        FormulaLbl6 = new javax.swing.JLabel();
        FormulaLbl7 = new javax.swing.JLabel();
        FormulaLbl1 = new javax.swing.JLabel();
        CriterioLbl2 = new javax.swing.JLabel();
        CriterioLbl3 = new javax.swing.JLabel();
        CriterioLbl4 = new javax.swing.JLabel();
        CriterioLbl5 = new javax.swing.JLabel();
        CriterioLbl6 = new javax.swing.JLabel();
        CriterioLbl7 = new javax.swing.JLabel();
        CriterioLbl1 = new javax.swing.JLabel();
        ResultadoColiformes = new javax.swing.JTextField();
        ResultadoDBOs = new javax.swing.JTextField();
        ResultadoGrasas = new javax.swing.JTextField();
        ResultadoMaterial = new javax.swing.JTextField();
        ResultadoSolidos = new javax.swing.JTextField();
        ResultadoPH = new javax.swing.JTextField();
        ResultadoTemperatura = new javax.swing.JTextField();
        CumplimientoColiformes = new javax.swing.JTextField();
        CumplimientoDBOs = new javax.swing.JTextField();
        CumplimientoGrasas = new javax.swing.JTextField();
        CumplimientoMaterial = new javax.swing.JTextField();
        CumplimientoSolidos = new javax.swing.JTextField();
        CumplimientoPH = new javax.swing.JTextField();
        CumplimientoTemperatura = new javax.swing.JTextField();
        EvaluacionColiformes = new javax.swing.JTextField();
        EvaluacionDBOs = new javax.swing.JTextField();
        EvaluacionGrasas = new javax.swing.JTextField();
        EvaluacionMaterial = new javax.swing.JTextField();
        EvaluacionSolidos = new javax.swing.JTextField();
        EvaluacionPH = new javax.swing.JTextField();
        EvaluacionTemperatura = new javax.swing.JTextField();
        CalcularBtn = new javax.swing.JButton();
        SalirBtn = new javax.swing.JButton();
        GraficarBtn = new javax.swing.JButton();
        Item1Btn = new javax.swing.JButton();
        Item2Btn = new javax.swing.JButton();
        Item3Btn = new javax.swing.JButton();
        Item4Btn = new javax.swing.JButton();
        Item5Btn = new javax.swing.JButton();
        Item6Btn = new javax.swing.JButton();
        Item7Btn = new javax.swing.JButton();
        EficienciaLbl = new javax.swing.JLabel();
        Eficiencia = new javax.swing.JTextField();
        CalcularTodo = new javax.swing.JButton();
        Evaluacion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        PanelFondo.setBackground(new java.awt.Color(255, 255, 255));
        PanelFondo.setMinimumSize(new java.awt.Dimension(1000, 500));
        PanelFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Titulo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        Titulo.setText("Curvas de calidad de un vertimiento");
        PanelFondo.add(Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, -1, -1));

        Numerolbl.setBackground(new java.awt.Color(255, 255, 255));
        Numerolbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Numerolbl.setText("N°");
        Numerolbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(Numerolbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 40, 50));

        ParametrosLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ParametrosLbl.setText("PARÁMETROS");
        ParametrosLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(ParametrosLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 90, 50));

        DatosESLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DatosESLbl.setText("DATOS DE ENTRADA Y SALIDA");
        DatosESLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(DatosESLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 190, 30));

        EntradaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EntradaLbl.setText("Entrada");
        EntradaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(EntradaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 100, 20));

        SalidaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SalidaLbl.setText("Salida");
        SalidaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(SalidaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 90, 20));

        TMlbl.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl.setText("TM");
        TMlbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 50, 40, 50));

        FormulaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl.setText("FORMULA");
        FormulaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, 100, 50));

        CriterioLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl.setText("CRITERIO");
        CriterioLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 100, 50));

        ResultadoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ResultadoLbl.setText("RESULTADO");
        ResultadoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(ResultadoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 50, 100, 50));

        CumplimientoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CumplimientoLbl.setText("% CUMPLIMIENTO");
        CumplimientoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CumplimientoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 50, 110, 50));

        EvaluacionLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EvaluacionLbl.setText("EVALUACIÓN");
        EvaluacionLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(EvaluacionLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 50, 110, 50));

        UnoLbl.setBackground(new java.awt.Color(255, 255, 255));
        UnoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        UnoLbl.setText("1");
        UnoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(UnoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 40, 50));

        DosLbl.setBackground(new java.awt.Color(255, 255, 255));
        DosLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DosLbl.setText("2");
        DosLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(DosLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 40, 50));

        TresLbl.setBackground(new java.awt.Color(255, 255, 255));
        TresLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TresLbl.setText("3");
        TresLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TresLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 40, 50));

        CuatroLbl.setBackground(new java.awt.Color(255, 255, 255));
        CuatroLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CuatroLbl.setText("4");
        CuatroLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CuatroLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 40, 50));

        CincoLbl.setBackground(new java.awt.Color(255, 255, 255));
        CincoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CincoLbl.setText("5");
        CincoLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CincoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 40, 50));

        SeisLbl.setBackground(new java.awt.Color(255, 255, 255));
        SeisLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SeisLbl.setText("6");
        SeisLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(SeisLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 40, 50));

        SieteLbl.setBackground(new java.awt.Color(255, 255, 255));
        SieteLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SieteLbl.setText("7");
        SieteLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(SieteLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 40, 50));

        ColiformesLbl.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        ColiformesLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ColiformesLbl.setText("Coliformes Totales");
        ColiformesLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(ColiformesLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 90, 50));

        DBOsLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        DBOsLbl.setText("DBOs");
        DBOsLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(DBOsLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 90, 50));

        GrasasLbl.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        GrasasLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        GrasasLbl.setText("Grasas y aceites");
        GrasasLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(GrasasLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 90, 50));

        MaterialLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        MaterialLbl.setText("Material flotante");
        MaterialLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(MaterialLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 90, 50));

        SolidosLbl.setFont(new java.awt.Font("Segoe UI", 0, 9)); // NOI18N
        SolidosLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SolidosLbl.setText("Sólidos suspendidos");
        SolidosLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(SolidosLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 300, 90, 50));

        PHlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PHlbl.setText("PH");
        PHlbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(PHlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 350, 90, 50));

        TemperaturaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TemperaturaLbl.setText("Temperatura");
        TemperaturaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TemperaturaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 90, 50));

        Coliformes1Txt.setForeground(new java.awt.Color(102, 102, 102));
        Coliformes1Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Coliformes1Txt.setText("Ingrese el valor");
        Coliformes1Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Coliformes1Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Coliformes1TxtMousePressed(evt);
            }
        });
        Coliformes1Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Coliformes1TxtActionPerformed(evt);
            }
        });
        PanelFondo.add(Coliformes1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 100, 50));

        Coliformes2Txt.setForeground(new java.awt.Color(102, 102, 102));
        Coliformes2Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Coliformes2Txt.setText("Ingrese el valor");
        Coliformes2Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Coliformes2Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Coliformes2TxtMousePressed(evt);
            }
        });
        PanelFondo.add(Coliformes2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 90, 50));

        DBOs1Txt.setForeground(new java.awt.Color(102, 102, 102));
        DBOs1Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DBOs1Txt.setText("Ingrese el valor");
        DBOs1Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        DBOs1Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DBOs1TxtMousePressed(evt);
            }
        });
        PanelFondo.add(DBOs1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 100, 50));

        DBOs2Txt.setForeground(new java.awt.Color(102, 102, 102));
        DBOs2Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DBOs2Txt.setText("Ingrese el valor");
        DBOs2Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        DBOs2Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DBOs2TxtMousePressed(evt);
            }
        });
        PanelFondo.add(DBOs2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 90, 50));

        Grasas1Txt.setForeground(new java.awt.Color(102, 102, 102));
        Grasas1Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Grasas1Txt.setText("Ingrese el valor");
        Grasas1Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Grasas1Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Grasas1TxtMousePressed(evt);
            }
        });
        PanelFondo.add(Grasas1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 100, 50));

        Grasas2Txt.setForeground(new java.awt.Color(102, 102, 102));
        Grasas2Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Grasas2Txt.setText("Ingrese el valor");
        Grasas2Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Grasas2Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Grasas2TxtMousePressed(evt);
            }
        });
        PanelFondo.add(Grasas2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 90, 50));

        MaterialTxt.setForeground(new java.awt.Color(102, 102, 102));
        MaterialTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MaterialTxt.setText("Ingrese el valor");
        MaterialTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        MaterialTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MaterialTxtMousePressed(evt);
            }
        });
        PanelFondo.add(MaterialTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 190, 50));

        Solidos1Txt.setForeground(new java.awt.Color(102, 102, 102));
        Solidos1Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Solidos1Txt.setText("Ingrese el valor");
        Solidos1Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Solidos1Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Solidos1TxtMousePressed(evt);
            }
        });
        PanelFondo.add(Solidos1Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 300, 100, 50));

        Solidos2Txt.setForeground(new java.awt.Color(102, 102, 102));
        Solidos2Txt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Solidos2Txt.setText("Ingrese el valor");
        Solidos2Txt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        Solidos2Txt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Solidos2TxtMousePressed(evt);
            }
        });
        PanelFondo.add(Solidos2Txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 300, 90, 50));

        PHTxt.setForeground(new java.awt.Color(102, 102, 102));
        PHTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PHTxt.setText("Ingrese el valor");
        PHTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        PHTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                PHTxtMousePressed(evt);
            }
        });
        PanelFondo.add(PHTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 190, 50));

        TemperaturaTxt.setForeground(new java.awt.Color(102, 102, 102));
        TemperaturaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TemperaturaTxt.setText("Ingrese el valor");
        TemperaturaTxt.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        TemperaturaTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TemperaturaTxtMousePressed(evt);
            }
        });
        PanelFondo.add(TemperaturaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 400, 190, 50));

        TMlbl2.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl2.setText("NPM");
        TMlbl2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 100, 40, 50));

        TMlbl3.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl3.setText("mg/L");
        TMlbl3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 150, 40, 50));

        TMlbl4.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl4.setText("mg/L");
        TMlbl4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 40, 50));

        TMlbl5.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl5.setText("Uni");
        TMlbl5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 40, 50));

        TMlbl6.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl6.setText("mg/L");
        TMlbl6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 40, 50));

        TMlbl7.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl7.setText("Uni");
        TMlbl7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 350, 40, 50));

        TMlbl8.setBackground(new java.awt.Color(255, 255, 255));
        TMlbl8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TMlbl8.setText("TM");
        TMlbl8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(TMlbl8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 40, 50));

        FormulaLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl2.setText("Dato < 20000");
        FormulaLbl2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 100, 100, 50));

        FormulaLbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl3.setText("S/E = R*100 = RP");
        FormulaLbl3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 150, 100, 50));

        FormulaLbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl4.setText("S/E = R*100 = RP");
        FormulaLbl4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, 100, 50));

        FormulaLbl5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl5.setText("Dato = 0");
        FormulaLbl5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 100, 50));

        FormulaLbl6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl6.setText("S/E = R*100 = RP");
        FormulaLbl6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 100, 50));

        FormulaLbl7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl7.setText("5<=Dato<=9");
        FormulaLbl7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 350, 100, 50));

        FormulaLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FormulaLbl1.setText("Dato = 20°C");
        FormulaLbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(FormulaLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 400, 100, 50));

        CriterioLbl2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl2.setText("< 20000");
        CriterioLbl2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl2, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 100, 100, 50));

        CriterioLbl3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl3.setText("> 80%");
        CriterioLbl3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 100, 50));

        CriterioLbl4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl4.setText("> 80%");
        CriterioLbl4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl4, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 200, 100, 50));

        CriterioLbl5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl5.setText("0");
        CriterioLbl5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 250, 100, 50));

        CriterioLbl6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl6.setText("> 80%");
        CriterioLbl6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl6, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, 100, 50));

        CriterioLbl7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl7.setText("5 - 9");
        CriterioLbl7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl7, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 350, 100, 50));

        CriterioLbl1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        CriterioLbl1.setText("20°C");
        CriterioLbl1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(CriterioLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 400, 100, 50));

        ResultadoColiformes.setEditable(false);
        ResultadoColiformes.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoColiformes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoColiformes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoColiformes, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 100, 100, 50));

        ResultadoDBOs.setEditable(false);
        ResultadoDBOs.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoDBOs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoDBOs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoDBOs, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 150, 100, 50));

        ResultadoGrasas.setEditable(false);
        ResultadoGrasas.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoGrasas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoGrasas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoGrasas, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, 100, 50));

        ResultadoMaterial.setEditable(false);
        ResultadoMaterial.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoMaterial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoMaterial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoMaterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 250, 100, 50));

        ResultadoSolidos.setEditable(false);
        ResultadoSolidos.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoSolidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoSolidos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoSolidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 300, 100, 50));

        ResultadoPH.setEditable(false);
        ResultadoPH.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoPH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoPH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 350, 100, 50));

        ResultadoTemperatura.setEditable(false);
        ResultadoTemperatura.setBackground(new java.awt.Color(255, 255, 255));
        ResultadoTemperatura.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        ResultadoTemperatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(ResultadoTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 400, 100, 50));

        CumplimientoColiformes.setEditable(false);
        CumplimientoColiformes.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoColiformes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoColiformes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoColiformes, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, 110, 50));

        CumplimientoDBOs.setEditable(false);
        CumplimientoDBOs.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoDBOs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoDBOs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoDBOs, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 110, 50));

        CumplimientoGrasas.setEditable(false);
        CumplimientoGrasas.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoGrasas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoGrasas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoGrasas, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 200, 110, 50));

        CumplimientoMaterial.setEditable(false);
        CumplimientoMaterial.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoMaterial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoMaterial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoMaterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 250, 110, 50));

        CumplimientoSolidos.setEditable(false);
        CumplimientoSolidos.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoSolidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoSolidos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoSolidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 300, 110, 50));

        CumplimientoPH.setEditable(false);
        CumplimientoPH.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoPH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoPH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 350, 110, 50));

        CumplimientoTemperatura.setEditable(false);
        CumplimientoTemperatura.setBackground(new java.awt.Color(255, 255, 255));
        CumplimientoTemperatura.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        CumplimientoTemperatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(CumplimientoTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 400, 110, 50));

        EvaluacionColiformes.setEditable(false);
        EvaluacionColiformes.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionColiformes.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionColiformes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionColiformes, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 100, 110, 50));

        EvaluacionDBOs.setEditable(false);
        EvaluacionDBOs.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionDBOs.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionDBOs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionDBOs, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 150, 110, 50));

        EvaluacionGrasas.setEditable(false);
        EvaluacionGrasas.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionGrasas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionGrasas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionGrasas, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 200, 110, 50));

        EvaluacionMaterial.setEditable(false);
        EvaluacionMaterial.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionMaterial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionMaterial.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionMaterial, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 250, 110, 50));

        EvaluacionSolidos.setEditable(false);
        EvaluacionSolidos.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionSolidos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionSolidos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionSolidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 300, 110, 50));

        EvaluacionPH.setEditable(false);
        EvaluacionPH.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionPH.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionPH.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionPH, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 350, 110, 50));

        EvaluacionTemperatura.setEditable(false);
        EvaluacionTemperatura.setBackground(new java.awt.Color(255, 255, 255));
        EvaluacionTemperatura.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        EvaluacionTemperatura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(EvaluacionTemperatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 400, 110, 50));

        CalcularBtn.setText("Calcular eficiencia");
        CalcularBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularBtnActionPerformed(evt);
            }
        });
        PanelFondo.add(CalcularBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 530, -1, -1));

        SalirBtn.setText("Salir");
        SalirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBtnActionPerformed(evt);
            }
        });
        PanelFondo.add(SalirBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 530, -1, -1));

        GraficarBtn.setText("Graficar");
        GraficarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GraficarBtnActionPerformed(evt);
            }
        });
        PanelFondo.add(GraficarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 530, -1, -1));

        Item1Btn.setText("Calcular");
        Item1Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item1BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item1Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 120, -1, -1));

        Item2Btn.setText("Calcular");
        Item2Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item2BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item2Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 170, -1, -1));

        Item3Btn.setText("Calcular");
        Item3Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item3BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item3Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 220, -1, -1));

        Item4Btn.setText("Calcular");
        Item4Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item4BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item4Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 270, -1, -1));

        Item5Btn.setText("Calcular");
        Item5Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item5BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item5Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 320, -1, -1));

        Item6Btn.setText("Calcular");
        Item6Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item6BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item6Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 370, -1, -1));

        Item7Btn.setText("Calcular");
        Item7Btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Item7BtnActionPerformed(evt);
            }
        });
        PanelFondo.add(Item7Btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 420, -1, -1));

        EficienciaLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EficienciaLbl.setText("La eficiencia de la planta de tratamiento es del");
        EficienciaLbl.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PanelFondo.add(EficienciaLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 320, 50));

        Eficiencia.setEditable(false);
        Eficiencia.setBackground(new java.awt.Color(255, 255, 255));
        Eficiencia.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Eficiencia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(Eficiencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 110, 50));

        CalcularTodo.setText("Calcular todo");
        CalcularTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcularTodoActionPerformed(evt);
            }
        });
        PanelFondo.add(CalcularTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 70, -1, -1));

        Evaluacion.setEditable(false);
        Evaluacion.setBackground(new java.awt.Color(255, 255, 255));
        Evaluacion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Evaluacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 255, 51)));
        PanelFondo.add(Evaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 470, 110, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 1009, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Coliformes1TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Coliformes1TxtMousePressed
        Coliformes1Txt.setText("");
        Coliformes1Txt.setBackground(new Color(247, 247, 247));
        Coliformes1Txt.setForeground(Color.black);
    }//GEN-LAST:event_Coliformes1TxtMousePressed
    
    public void CalculoColiformes(float e, float s){
        float porcentajefinal = 0;
        String respuesta;
        String respuesta2;
        String evaluacion;
        //Resultado
        respuesta = String.valueOf(s);
        ResultadoColiformes.setText(respuesta);
        
        //Cumplimiento
        if(s == 20000){
            porcentajefinal = 0;
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoColiformes.setText(respuesta2);
        }else{
            if(s < 20000){
                porcentajefinal= 100-((s/1000)*2);
                respuesta2 = String.valueOf(porcentajefinal);
                CumplimientoColiformes.setText(respuesta2);
            }else{
                if(s>20000){
                    porcentajefinal= 100-((s/1000)*2);
                    respuesta2 = String.valueOf(porcentajefinal);
                    CumplimientoColiformes.setText(respuesta2);
                }
            }
        }
        //condicional para saber la evaluacion
        if(porcentajefinal == 100){
            evaluacion = "Excelente";
            EvaluacionColiformes.setText(evaluacion);
            EvaluacionColiformes.setBackground(Color.green);
        }else{
            if(porcentajefinal < 100 && porcentajefinal>=80){
                evaluacion = "Sobresaliente";
                EvaluacionColiformes.setText(evaluacion);
                EvaluacionColiformes.setBackground(new Color(124, 252, 0));
            }else{
                if(porcentajefinal < 80 && porcentajefinal >= 60){
                    evaluacion = "Bueno";
                    EvaluacionColiformes.setText(evaluacion);
                    EvaluacionColiformes.setBackground(Color.yellow);
                }else{
                    if(porcentajefinal <60 && porcentajefinal >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionColiformes.setText(evaluacion);
                        EvaluacionColiformes.setBackground(new Color(232, 169, 23));
                    }else{
                        if(porcentajefinal < 40 && porcentajefinal >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionColiformes.setText(evaluacion);
                            EvaluacionColiformes.setBackground(Color.orange);
                        }else{
                            if(porcentajefinal < 20){
                                evaluacion = "Deficiente";
                                EvaluacionColiformes.setText(evaluacion);
                                EvaluacionColiformes.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoDBOs(float e, float s){
        float resultado;
        float porcentajefinal = 0;
        String respuesta;
        String respuesta2;
        String evaluacion;
        
        // resultado operaciones
        resultado = (s/e)*100;
        respuesta = String.valueOf(resultado);
        ResultadoDBOs.setText(respuesta + " %");
        
        //condicional para saber el porcentaje de cumplimiento
        if(resultado == 100){
            porcentajefinal = 0;
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoDBOs.setText(respuesta2);
        }else{
            if(resultado <100){
                porcentajefinal= 100-resultado;
                respuesta2 = String.valueOf(porcentajefinal);
                CumplimientoDBOs.setText(respuesta2);
            }else{
                if(resultado <= 0){
                    porcentajefinal = 0;
                    respuesta2 = String.valueOf(porcentajefinal);
                    CumplimientoDBOs.setText(respuesta2);
                }
            }
        }
        
        //condicional para saber la evaluacion
        if(porcentajefinal == 100){
            evaluacion = "Excelente";
            EvaluacionDBOs.setText(evaluacion);
            EvaluacionDBOs.setBackground(Color.green);
        }else{
            if(porcentajefinal < 100 && porcentajefinal>=80){
                evaluacion = "Sobresaliente";
                EvaluacionDBOs.setText(evaluacion);
                EvaluacionDBOs.setBackground(new Color(124, 252, 0));
            }else{
                if(porcentajefinal < 80 && porcentajefinal >= 60){
                    evaluacion = "Bueno";
                    EvaluacionDBOs.setText(evaluacion);
                    EvaluacionDBOs.setBackground(Color.yellow);
                }else{
                    if(porcentajefinal <60 && porcentajefinal >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionDBOs.setText(evaluacion);
                        EvaluacionDBOs.setBackground(new Color(232, 169, 23));
                    }else{
                        if(porcentajefinal < 40 && porcentajefinal >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionDBOs.setText(evaluacion);
                            EvaluacionDBOs.setBackground(Color.orange);
                        }else{
                            if(porcentajefinal < 20){
                                evaluacion = "Deficiente";
                                EvaluacionDBOs.setText(evaluacion);
                                EvaluacionDBOs.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoGrasas(float e, float s){
        float resultado;
        float porcentajefinal = 0;
        String respuesta;
        String respuesta2;
        String evaluacion;
        
        // resultado operaciones
        resultado = (s/e)*100;
        respuesta = String.valueOf(resultado);
        ResultadoGrasas.setText(respuesta + " %");
        
        //condicional para saber el porcentaje de cumplimiento
        if(resultado == 100){
            porcentajefinal = 0;
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoGrasas.setText(respuesta2);
        }else{
            if(resultado <100){
                porcentajefinal= 100-resultado;
                respuesta2 = String.valueOf(porcentajefinal);
                CumplimientoGrasas.setText(respuesta2);
            }else{
                if(resultado <= 0){
                    porcentajefinal = 0;
                    respuesta2 = String.valueOf(porcentajefinal);
                    CumplimientoGrasas.setText(respuesta2);
                }
            }
        }
        
        //condicional para saber la evaluacion
        if(porcentajefinal == 100){
            evaluacion = "Excelente";
            EvaluacionGrasas.setText(evaluacion);
            EvaluacionGrasas.setBackground(Color.green);
        }else{
            if(porcentajefinal < 100 && porcentajefinal>=80){
                evaluacion = "Sobresaliente";
                EvaluacionGrasas.setText(evaluacion);
                EvaluacionGrasas.setBackground(new Color(124, 252, 0));
            }else{
                if(porcentajefinal < 80 && porcentajefinal >= 60){
                    evaluacion = "Bueno";
                    EvaluacionGrasas.setText(evaluacion);
                    EvaluacionGrasas.setBackground(Color.yellow);
                }else{
                    if(porcentajefinal <60 && porcentajefinal >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionGrasas.setText(evaluacion);
                        EvaluacionGrasas.setBackground(new Color(232, 169, 23));
                    }else{
                        if(porcentajefinal < 40 && porcentajefinal >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionGrasas.setText(evaluacion);
                            EvaluacionGrasas.setBackground(Color.orange);
                        }else{
                            if(porcentajefinal < 20){
                                evaluacion = "Deficiente";
                                EvaluacionGrasas.setText(evaluacion);
                                EvaluacionGrasas.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoMaterial(float e){
        float porcentajefinal = 0;
        String respuesta2;
        String evaluacion;
        if(e == 0){
            porcentajefinal= 100;
            ResultadoMaterial.setText("Ausencia de MF");
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoMaterial.setText(respuesta2);
        }else{
            ResultadoMaterial.setText("Presencia de MF");
            porcentajefinal=0;
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoMaterial.setText(respuesta2);
        }
        if(porcentajefinal == 100){
            evaluacion = "Excelente";
            EvaluacionMaterial.setText(evaluacion);
            EvaluacionMaterial.setBackground(Color.green);
        }else{
            if(porcentajefinal < 100 && porcentajefinal>=80){
                evaluacion = "Sobresaliente";
                EvaluacionMaterial.setText(evaluacion);
                EvaluacionMaterial.setBackground(new Color(124, 252, 0));
            }else{
                if(porcentajefinal < 80 && porcentajefinal >= 60){
                    evaluacion = "Bueno";
                    EvaluacionMaterial.setText(evaluacion);
                    EvaluacionMaterial.setBackground(Color.yellow);
                }else{
                    if(porcentajefinal <60 && porcentajefinal >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionMaterial.setText(evaluacion);
                        EvaluacionMaterial.setBackground(new Color(232, 169, 23));
                    }else{
                        if(porcentajefinal < 40 && porcentajefinal >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionMaterial.setText(evaluacion);
                            EvaluacionMaterial.setBackground(Color.orange);
                        }else{
                            if(porcentajefinal < 20){
                                evaluacion = "Deficiente";
                                EvaluacionMaterial.setText(evaluacion);
                                EvaluacionMaterial.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoSST(float e, float s){
        float resultado;
        float porcentajefinal = 0;
        String respuesta;
        String respuesta2;
        String evaluacion;
        
        // resultado operaciones
        resultado = (s/e)*100;
        respuesta = String.valueOf(resultado);
        ResultadoSolidos.setText(respuesta + " %");
        
        //condicional para saber el porcentaje de cumplimiento
        if(resultado == 100){
            porcentajefinal = 0;
            respuesta2 = String.valueOf(porcentajefinal);
            CumplimientoSolidos.setText(respuesta2);
        }else{
            if(resultado <100){
                porcentajefinal= 100-resultado;
                respuesta2 = String.valueOf(porcentajefinal);
                CumplimientoSolidos.setText(respuesta2);
            }else{
                if(resultado <= 0){
                    porcentajefinal = 0;
                    respuesta2 = String.valueOf(porcentajefinal);
                    CumplimientoSolidos.setText(respuesta2);
                }
            }
        }
        
        //condicional para saber la evaluacion
        if(porcentajefinal == 100){
            evaluacion = "Excelente";
            EvaluacionSolidos.setText(evaluacion);
            EvaluacionSolidos.setBackground(Color.green);
        }else{
            if(porcentajefinal < 100 && porcentajefinal>=80){
                evaluacion = "Sobresaliente";
                EvaluacionSolidos.setText(evaluacion);
                EvaluacionSolidos.setBackground(new Color(124, 252, 0));
            }else{
                if(porcentajefinal < 80 && porcentajefinal >= 60){
                    evaluacion = "Bueno";
                    EvaluacionSolidos.setText(evaluacion);
                    EvaluacionSolidos.setBackground(Color.yellow);
                }else{
                    if(porcentajefinal <60 && porcentajefinal >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionSolidos.setText(evaluacion);
                        EvaluacionSolidos.setBackground(new Color(232, 169, 23));
                    }else{
                        if(porcentajefinal < 40 && porcentajefinal >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionSolidos.setText(evaluacion);
                            EvaluacionSolidos.setBackground(Color.orange);
                        }else{
                            if(porcentajefinal < 20){
                                evaluacion = "Deficiente";
                                EvaluacionSolidos.setText(evaluacion);
                                EvaluacionSolidos.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoPH(float e){
        float porcentajefinal = 0;
        float cumplimiento = 0;
        String respuesta2;
        String evaluacion;
        if(e >= 5 && e<= 9){
            porcentajefinal = 0;
            respuesta2 = String.valueOf(porcentajefinal);
            ResultadoPH.setText(respuesta2);
        }else{
            if(e < 5){
                porcentajefinal = e-5;
                respuesta2 = String.valueOf(porcentajefinal);
                ResultadoPH.setText(respuesta2);
            }else{
                if(e > 9){
                    porcentajefinal = e-9;
                    respuesta2 = String.valueOf(porcentajefinal);
                    ResultadoPH.setText(respuesta2);
                }
            }
        }
        
        //cumplimiento
        if(porcentajefinal == 0){
            cumplimiento = 100;
            respuesta2 = String.valueOf(cumplimiento);
            CumplimientoPH.setText(respuesta2);
        }else{
            if(porcentajefinal < 0){
                cumplimiento = e*20;
                respuesta2 = String.valueOf(cumplimiento);
                CumplimientoPH.setText(respuesta2);
            }else{
                if(porcentajefinal > 0){
                    cumplimiento = 100-(porcentajefinal*20);
                    respuesta2 = String.valueOf(cumplimiento);
                    CumplimientoPH.setText(respuesta2);
                }
            }
        }
        
        //condicional para saber la evaluacion
        if(cumplimiento == 100){
            evaluacion = "Excelente";
            EvaluacionPH.setText(evaluacion);
            EvaluacionPH.setBackground(Color.green);
        }else{
            if(cumplimiento < 100 && cumplimiento>=80){
                evaluacion = "Sobresaliente";
                EvaluacionPH.setText(evaluacion);
                EvaluacionPH.setBackground(new Color(124, 252, 0));
            }else{
                if(cumplimiento < 80 && cumplimiento >= 60){
                    evaluacion = "Bueno";
                    EvaluacionPH.setText(evaluacion);
                    EvaluacionPH.setBackground(Color.yellow);
                }else{
                    if(cumplimiento <60 && cumplimiento >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionPH.setText(evaluacion);
                        EvaluacionPH.setBackground(new Color(232, 169, 23));
                    }else{
                        if(cumplimiento < 40 && cumplimiento >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionPH.setText(evaluacion);
                            EvaluacionPH.setBackground(Color.orange);
                        }else{
                            if(cumplimiento < 20){
                                evaluacion = "Deficiente";
                                EvaluacionPH.setText(evaluacion);
                                EvaluacionPH.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    public void CalculoTemperatura(float e){
        float porcentajefinal = 0;
        float cumplimiento = 0;
        String respuesta2;
        String evaluacion;
        if(e == 20){
            porcentajefinal = e-20;
            respuesta2 = String.valueOf(porcentajefinal);
            ResultadoTemperatura.setText(respuesta2);
        }else{
            if(e < 20){
                porcentajefinal = e-20;
                respuesta2 = String.valueOf(porcentajefinal);
                ResultadoTemperatura.setText(respuesta2);
            }else{
                if(e > 20){
                    porcentajefinal = e-20;
                    respuesta2 = String.valueOf(porcentajefinal);
                    ResultadoTemperatura.setText(respuesta2);
                }
            }
        }
        
        //cumplimiento
        if(porcentajefinal == 0){
            cumplimiento = 100;
            respuesta2 = String.valueOf(cumplimiento);
            CumplimientoTemperatura.setText(respuesta2);
        }else{
            if(porcentajefinal < 0){
                cumplimiento = (float) (e/0.2);
                respuesta2 = String.valueOf(cumplimiento);
                CumplimientoTemperatura.setText(respuesta2);
            }else{
                if(porcentajefinal > 0){
                    cumplimiento = (float) (100-(porcentajefinal/0.2));
                    respuesta2 = String.valueOf(cumplimiento);
                    CumplimientoTemperatura.setText(respuesta2);
                }
            }
        }
        
        //condicional para saber la evaluacion
        if(cumplimiento == 100){
            evaluacion = "Excelente";
            EvaluacionTemperatura.setText(evaluacion);
            EvaluacionTemperatura.setBackground(Color.green);
        }else{
            if(cumplimiento < 100 && cumplimiento>=80){
                evaluacion = "Sobresaliente";
                EvaluacionTemperatura.setText(evaluacion);
                EvaluacionTemperatura.setBackground(new Color(124, 252, 0));
            }else{
                if(cumplimiento < 80 && cumplimiento >= 60){
                    evaluacion = "Bueno";
                    EvaluacionTemperatura.setText(evaluacion);
                    EvaluacionTemperatura.setBackground(Color.yellow);
                }else{
                    if(cumplimiento <60 && cumplimiento >= 40){
                        evaluacion = "Aceptable";
                        EvaluacionTemperatura.setText(evaluacion);
                        EvaluacionTemperatura.setBackground(new Color(232, 169, 23));
                    }else{
                        if(cumplimiento < 40 && cumplimiento >= 20){
                            evaluacion = "Insuficiente";
                            EvaluacionTemperatura.setText(evaluacion);
                            EvaluacionTemperatura.setBackground(Color.orange);
                        }else{
                            if(cumplimiento < 20){
                                evaluacion = "Deficiente";
                                EvaluacionTemperatura.setText(evaluacion);
                                EvaluacionTemperatura.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
    }
    
    private void CalcularBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularBtnActionPerformed
        try{
        float item1= Float.parseFloat(CumplimientoColiformes.getText());
        float item2= Float.parseFloat(CumplimientoDBOs.getText());
        float item3= Float.parseFloat(CumplimientoGrasas.getText());
        float item4= Float.parseFloat(CumplimientoMaterial.getText());
        float item5= Float.parseFloat(CumplimientoSolidos.getText());
        float item6= Float.parseFloat(CumplimientoPH.getText());
        float item7= Float.parseFloat(CumplimientoTemperatura.getText());
        String evaluacion;
        float promedio = (item1 + item2 + item3 + item4 + item5+ item6+item7)/7;
        Eficiencia.setText(promedio + " %");
        if(promedio == 100){
            evaluacion = "Excelente";
            Evaluacion.setText(evaluacion);
            Evaluacion.setBackground(Color.green);
        }else{
            if(promedio < 100 && promedio>=80){
                evaluacion = "Sobresaliente";
                Evaluacion.setText(evaluacion);
                Evaluacion.setBackground(new Color(124, 252, 0));
            }else{
                if(promedio < 80 && promedio >= 60){
                    evaluacion = "Bueno";
                    Evaluacion.setText(evaluacion);
                    Evaluacion.setBackground(Color.yellow);
                }else{
                    if(promedio <60 && promedio >= 40){
                        evaluacion = "Aceptable";
                        Evaluacion.setText(evaluacion);
                        EvaluacionColiformes.setBackground(new Color(232, 169, 23));
                    }else{
                        if(promedio < 40 && promedio >= 20){
                            evaluacion = "Insuficiente";
                            Evaluacion.setText(evaluacion);
                            Evaluacion.setBackground(Color.orange);
                        }else{
                            if(promedio < 20){
                                evaluacion = "Deficiente";
                                Evaluacion.setText(evaluacion);
                                Evaluacion.setBackground(Color.red);
                            }
                        }
                    }
                }
            }
        }
        }catch (Exception e){
            JOptionPane.showMessageDialog(null, "Solo se puede usar cuando la columna % Cumplimiento este llena");
        }
    }//GEN-LAST:event_CalcularBtnActionPerformed

    private void Coliformes1TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Coliformes1TxtActionPerformed

    }//GEN-LAST:event_Coliformes1TxtActionPerformed
    
    public void cerrar(){
        try{
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            addWindowListener(new WindowAdapter(){
                public void windowClosing(WindowEvent e){
                    confirmarSalida();
                }
            });
            this.setVisible(true);
        } catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void  confirmarSalida(){
        int valor = JOptionPane.showConfirmDialog(this, "¿Seguro que desea salir?", "Advertencia",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if(valor == JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
    
    private void SalirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBtnActionPerformed
        confirmarSalida();
    }//GEN-LAST:event_SalirBtnActionPerformed

    private void Coliformes2TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Coliformes2TxtMousePressed
        Coliformes2Txt.setText("");
        Coliformes2Txt.setBackground(new Color(247, 247, 247));
        Coliformes2Txt.setForeground(Color.black);
    }//GEN-LAST:event_Coliformes2TxtMousePressed

    private void DBOs1TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DBOs1TxtMousePressed
        DBOs1Txt.setText("");
        DBOs1Txt.setBackground(new Color(247, 247, 247));
        DBOs1Txt.setForeground(Color.black);
    }//GEN-LAST:event_DBOs1TxtMousePressed

    private void DBOs2TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DBOs2TxtMousePressed
        DBOs2Txt.setText("");
        DBOs2Txt.setBackground(new Color(247, 247, 247));
        DBOs2Txt.setForeground(Color.black);
    }//GEN-LAST:event_DBOs2TxtMousePressed

    private void Grasas1TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grasas1TxtMousePressed
        Grasas1Txt.setText("");
        Grasas1Txt.setBackground(new Color(247, 247, 247));
        Grasas1Txt.setForeground(Color.black);
    }//GEN-LAST:event_Grasas1TxtMousePressed

    private void Grasas2TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Grasas2TxtMousePressed
        Grasas2Txt.setText("");
        Grasas2Txt.setBackground(new Color(247, 247, 247));
        Grasas2Txt.setForeground(Color.black);
    }//GEN-LAST:event_Grasas2TxtMousePressed

    private void MaterialTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaterialTxtMousePressed
        MaterialTxt.setText("");
        MaterialTxt.setBackground(new Color(247, 247, 247));
        MaterialTxt.setForeground(Color.black);
    }//GEN-LAST:event_MaterialTxtMousePressed

    private void Solidos1TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Solidos1TxtMousePressed
        Solidos1Txt.setText("");
        Solidos1Txt.setBackground(new Color(247, 247, 247));
        Solidos1Txt.setForeground(Color.black);
    }//GEN-LAST:event_Solidos1TxtMousePressed

    private void Solidos2TxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Solidos2TxtMousePressed
        Solidos2Txt.setText("");
        Solidos2Txt.setBackground(new Color(247, 247, 247));
        Solidos2Txt.setForeground(Color.black);
    }//GEN-LAST:event_Solidos2TxtMousePressed

    private void PHTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PHTxtMousePressed
        PHTxt.setText("");
        PHTxt.setBackground(new Color(247, 247, 247));
        PHTxt.setForeground(Color.black);
    }//GEN-LAST:event_PHTxtMousePressed

    private void TemperaturaTxtMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TemperaturaTxtMousePressed
        TemperaturaTxt.setText("");
        TemperaturaTxt.setBackground(new Color(247, 247, 247));
        TemperaturaTxt.setForeground(Color.black);
    }//GEN-LAST:event_TemperaturaTxtMousePressed

    private void Item1BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item1BtnActionPerformed
        try{
        float Coliformes1 = Float.parseFloat(Coliformes1Txt.getText());
        float Coliformes2 = Float.parseFloat(Coliformes2Txt.getText());
        CalculoColiformes(Coliformes1, Coliformes2);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
    }//GEN-LAST:event_Item1BtnActionPerformed

    private void Item2BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item2BtnActionPerformed
        try {
            float DBOs1 = Float.parseFloat(DBOs1Txt.getText());
            float DBOs2 = Float.parseFloat(DBOs2Txt.getText());
            CalculoDBOs(DBOs1, DBOs2);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
    }//GEN-LAST:event_Item2BtnActionPerformed

    private void Item3BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item3BtnActionPerformed
        try {
            float Grasas1 = Float.parseFloat(Grasas1Txt.getText());
            float Grasas2 = Float.parseFloat(Grasas2Txt.getText());
            CalculoGrasas(Grasas1, Grasas2);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
        
    }//GEN-LAST:event_Item3BtnActionPerformed

    private void Item4BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item4BtnActionPerformed
        try {
            float Material = Float.parseFloat(MaterialTxt.getText());
            CalculoMaterial(Material);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
        
    }//GEN-LAST:event_Item4BtnActionPerformed

    private void Item5BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item5BtnActionPerformed
        try {
            float Solidos1 = Float.parseFloat(Solidos1Txt.getText());
            float Solidos2 = Float.parseFloat(Solidos2Txt.getText());
            CalculoSST(Solidos1, Solidos2);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
    }//GEN-LAST:event_Item5BtnActionPerformed

    private void Item6BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item6BtnActionPerformed
        try {
            float PH = Float.parseFloat(PHTxt.getText());
            CalculoPH(PH);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
    }//GEN-LAST:event_Item6BtnActionPerformed

    private void Item7BtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Item7BtnActionPerformed
        try {
            float Temperatura = Float.parseFloat(TemperaturaTxt.getText());
            CalculoTemperatura(Temperatura);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Rellene los campos, por favor.");
        }
    }//GEN-LAST:event_Item7BtnActionPerformed

    private void CalcularTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcularTodoActionPerformed
        try{
        float Coliformes1 = Float.parseFloat(Coliformes1Txt.getText());
        float Coliformes2 = Float.parseFloat(Coliformes2Txt.getText());
        float DBOs1 = Float.parseFloat(DBOs1Txt.getText());
        float DBOs2 = Float.parseFloat(DBOs2Txt.getText());
        float Grasas1 = Float.parseFloat(Grasas1Txt.getText());
        float Grasas2 = Float.parseFloat(Grasas2Txt.getText());
        float Material = Float.parseFloat(MaterialTxt.getText());
        float Solidos1 = Float.parseFloat(Solidos1Txt.getText());
        float Solidos2 = Float.parseFloat(Solidos2Txt.getText());
        float PH = Float.parseFloat(PHTxt.getText());
        float Temperatura = Float.parseFloat(TemperaturaTxt.getText());
        CalculoColiformes(Coliformes1, Coliformes2);
        CalculoDBOs(DBOs1, DBOs2);
        CalculoGrasas(Grasas1, Grasas2);
        CalculoMaterial(Material);
        CalculoSST(Solidos1, Solidos2);
        CalculoPH(PH);
        CalculoTemperatura(Temperatura);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Para usar este boton debe digitar todos los campos requeridos");
        }
    }//GEN-LAST:event_CalcularTodoActionPerformed

    private void GraficarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GraficarBtnActionPerformed
        try{
        JFreeChart grafico = null;
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        float item1= Float.parseFloat(CumplimientoColiformes.getText());
        float item2= Float.parseFloat(CumplimientoDBOs.getText());
        float item3= Float.parseFloat(CumplimientoGrasas.getText());
        float item4= Float.parseFloat(CumplimientoMaterial.getText());
        float item5= Float.parseFloat(CumplimientoSolidos.getText());
        float item6= Float.parseFloat(CumplimientoPH.getText());
        float item7= Float.parseFloat(CumplimientoTemperatura.getText());
        datos.addValue(item1, "%", "1");
        datos.addValue(item2, "%", "2");
        datos.addValue(item3, "%", "3");
        datos.addValue(item4, "%", "4"); 
        datos.addValue(item5, "%", "5");
        datos.addValue(item6, "%", "6"); 
        datos.addValue(item7, "%", "7");
        
        JFreeChart chart = ChartFactory.createLineChart("Curvas de calidad de un vertimiento", "Item", "%",datos , 
        PlotOrientation.VERTICAL, true, true, false);
        ChartPanel chartPanel = new ChartPanel(chart);
        JFrame info = new JFrame("Grafica");
        info.getContentPane().add(chartPanel);
        info.pack();
        info.setVisible(true);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Solo se puede graficar cuando la columna % Cumplimiento este llena");
        }
    }//GEN-LAST:event_GraficarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CalcularBtn;
    private javax.swing.JButton CalcularTodo;
    private javax.swing.JLabel CincoLbl;
    private javax.swing.JTextField Coliformes1Txt;
    private javax.swing.JTextField Coliformes2Txt;
    private javax.swing.JLabel ColiformesLbl;
    private javax.swing.JLabel CriterioLbl;
    private javax.swing.JLabel CriterioLbl1;
    private javax.swing.JLabel CriterioLbl2;
    private javax.swing.JLabel CriterioLbl3;
    private javax.swing.JLabel CriterioLbl4;
    private javax.swing.JLabel CriterioLbl5;
    private javax.swing.JLabel CriterioLbl6;
    private javax.swing.JLabel CriterioLbl7;
    private javax.swing.JLabel CuatroLbl;
    private javax.swing.JTextField CumplimientoColiformes;
    private javax.swing.JTextField CumplimientoDBOs;
    private javax.swing.JTextField CumplimientoGrasas;
    private javax.swing.JLabel CumplimientoLbl;
    private javax.swing.JTextField CumplimientoMaterial;
    private javax.swing.JTextField CumplimientoPH;
    private javax.swing.JTextField CumplimientoSolidos;
    private javax.swing.JTextField CumplimientoTemperatura;
    private javax.swing.JTextField DBOs1Txt;
    private javax.swing.JTextField DBOs2Txt;
    private javax.swing.JLabel DBOsLbl;
    private javax.swing.JLabel DatosESLbl;
    private javax.swing.JLabel DosLbl;
    private javax.swing.JTextField Eficiencia;
    private javax.swing.JLabel EficienciaLbl;
    private javax.swing.JLabel EntradaLbl;
    private javax.swing.JTextField Evaluacion;
    private javax.swing.JTextField EvaluacionColiformes;
    private javax.swing.JTextField EvaluacionDBOs;
    private javax.swing.JTextField EvaluacionGrasas;
    private javax.swing.JLabel EvaluacionLbl;
    private javax.swing.JTextField EvaluacionMaterial;
    private javax.swing.JTextField EvaluacionPH;
    private javax.swing.JTextField EvaluacionSolidos;
    private javax.swing.JTextField EvaluacionTemperatura;
    private javax.swing.JLabel FormulaLbl;
    private javax.swing.JLabel FormulaLbl1;
    private javax.swing.JLabel FormulaLbl2;
    private javax.swing.JLabel FormulaLbl3;
    private javax.swing.JLabel FormulaLbl4;
    private javax.swing.JLabel FormulaLbl5;
    private javax.swing.JLabel FormulaLbl6;
    private javax.swing.JLabel FormulaLbl7;
    private javax.swing.JButton GraficarBtn;
    private javax.swing.JTextField Grasas1Txt;
    private javax.swing.JTextField Grasas2Txt;
    private javax.swing.JLabel GrasasLbl;
    private javax.swing.JButton Item1Btn;
    private javax.swing.JButton Item2Btn;
    private javax.swing.JButton Item3Btn;
    private javax.swing.JButton Item4Btn;
    private javax.swing.JButton Item5Btn;
    private javax.swing.JButton Item6Btn;
    private javax.swing.JButton Item7Btn;
    private javax.swing.JLabel MaterialLbl;
    private javax.swing.JTextField MaterialTxt;
    private javax.swing.JLabel Numerolbl;
    private javax.swing.JTextField PHTxt;
    private javax.swing.JLabel PHlbl;
    private javax.swing.JPanel PanelFondo;
    private javax.swing.JLabel ParametrosLbl;
    private javax.swing.JTextField ResultadoColiformes;
    private javax.swing.JTextField ResultadoDBOs;
    private javax.swing.JTextField ResultadoGrasas;
    private javax.swing.JLabel ResultadoLbl;
    private javax.swing.JTextField ResultadoMaterial;
    private javax.swing.JTextField ResultadoPH;
    private javax.swing.JTextField ResultadoSolidos;
    private javax.swing.JTextField ResultadoTemperatura;
    private javax.swing.JLabel SalidaLbl;
    private javax.swing.JButton SalirBtn;
    private javax.swing.JLabel SeisLbl;
    private javax.swing.JLabel SieteLbl;
    private javax.swing.JTextField Solidos1Txt;
    private javax.swing.JTextField Solidos2Txt;
    private javax.swing.JLabel SolidosLbl;
    private javax.swing.JLabel TMlbl;
    private javax.swing.JLabel TMlbl2;
    private javax.swing.JLabel TMlbl3;
    private javax.swing.JLabel TMlbl4;
    private javax.swing.JLabel TMlbl5;
    private javax.swing.JLabel TMlbl6;
    private javax.swing.JLabel TMlbl7;
    private javax.swing.JLabel TMlbl8;
    private javax.swing.JLabel TemperaturaLbl;
    private javax.swing.JTextField TemperaturaTxt;
    private javax.swing.JLabel Titulo;
    private javax.swing.JLabel TresLbl;
    private javax.swing.JLabel UnoLbl;
    // End of variables declaration//GEN-END:variables

}
